
networks:
  default:
    driver: bridge
  socket_proxy:
    driver: bridge
    external: true
  traefik_public:
    external: true

##
## To be used in combination with the molecule tests to debug containers
##
services:

  traefik:
    image: traefik:v2.10.1
    container_name: traefik
    restart: unless-stopped
    networks:
      - traefik_public
      - socket_proxy
    ports:
      - mode: host
        protocol: tcp
        published: 80
        target: 80
      - mode: host
        protocol: tcp
        published: 443
        target: 443
    labels:
      - traefik.enable=true
      - traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https
      - traefik.http.routers.http-catchall.entrypoints=http
      - traefik.http.routers.http-catchall.middlewares=redirect-to-https
      - traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.ping.entrypoints=https
      - traefik.http.routers.ping.rule=Host(`traefik.example.int`) && PathPrefix(`/ping`)
      - traefik.http.routers.ping.service=ping@internal
      - traefik.http.routers.traefik-rtr.service=api@internal
      - traefik.http.routers.traefik-rtr.entrypoints=https
      - traefik.http.routers.traefik-rtr.rule=Host(`traefik.example.int`)
      - traefik.http.services.api.loadbalancer.server.port=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/docker/traefik2:/etc/traefik
      - ${HOME}/docker/traefik2/certs:/certs
      - ${HOME}/docker/shared:/shared

  ## ref: https://jacar.es/en/como-instalar-portainer-con-docker-compose/
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
#    networks:
#      - socket_proxy
    depends_on:
      - socket-proxy
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${HOME}/docker/portainer-data:/data
    ports:
      - 9000:9000

  socket-proxy:
    image: fluencelabs/docker-socket-proxy
    container_name: socket-proxy
    privileged: True
#    networks:
#      - socket_proxy
    ports:
      - 127.0.0.1:2375:2375
    restart: always
    environment:
      ## app envs
      AUTH: 0
      BUILD: 0
      COMMIT: 0
      CONFIGS: 0
      CONTAINERS: 1
      CONTAINERS_CREATE: 1
      CONTAINERS_DELETE: 1
      CONTAINERS_START: 1
      CONTAINERS_UPDATE: 1
      DELETE: 1
      DISTRIBUTION: 0
      EVENTS: 1
      EXEC: 0
      IMAGES: 1
      IMAGES_DELETE: 1
      INFO: 1
      LOG_LEVEL: debug
      NETWORKS: 1
      NODES: 0
      PING: 1
      PLUGINS: 0
      POST: 1
      SECRETS: 0
      SERVICES: 1
      SESSION: 0
      SWARM: 0
      SYSTEM: 0
      TASKS: 1
      VERSION: 1
      VOLUMES: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  dozzle:
    image: amir20/dozzle:latest
    container_name: dozzle
#    networks:
#      - socket_proxy
    depends_on:
      - socket-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      ## app envs
      DOCKER_HOST: tcp://socket-proxy:2375
      DOZZLE_FILTER: status=running
      DOZZLE_LEVEL: info
      DOZZLE_TAILSIZE: 300
    ports:
      - 8888:8080

  ########################
  ## ANSIBLETEMPLATEUI GROUP SERVICES
  ansible-template-ui:
#    image: lj020326/ansible-template-ui:latest
    image: media.johnson.int:5000/ansible-template-ui:latest
    container_name: ansible-template-ui
    restart: unless-stopped
#    privileged: True
#    user: root
    networks:
      - traefik_public
      - socket_proxy
    depends_on:
      - socket-proxy
    environment:
       DOCKER_HOST: tcp://socket-proxy:2375
       DOCKER_ANSIBLE_EE_IMAGE: media.johnson.int:5000/ansible-execution-env:latest
#       DOCKER_ANSIBLE_EE_IMAGE: lj020326/ansible-execution-env
#       DOCKER_ANSIBLE_EE_IMAGE: sivel/ansible-template-ui
       SCRIPT_NAME: /ansibleweb
    ports:
      - 8080:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.ansibletemplateui.entrypoints=https
      - traefik.http.routers.ansibletemplateui.rule=Host(`ansibletemplateui.example.int`) && PathPrefix(`/ansibleweb`)
      ## Don't strip the prefix in your reverse proxy config per
      ## ref: https://dlukes.github.io/flask-wsgi-url-prefix.html
      ## ref: https://github.com/gonzalo123/flask-traefik
#      ## ref: https://doc.traefik.io/traefik/middlewares/http/stripprefix/
#      - traefik.http.middlewares.ansibletemplateui.stripprefix.prefixes=/ansibleweb
      - traefik.http.services.ansibletemplateui.loadbalancer.server.port=8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${PWD}/ansible_template_ui/data:/data
